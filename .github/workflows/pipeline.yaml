name: Depoy Battlesnake API

on:
  push:
    branches:
      - "main"
      - "feature**"
  delete:
    branches:
      - "feature**"

permissions:
  id-token: write
  contents: read
env:
  AWS_REGION: us-west-2
  # Testing
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::057283593447:role/aws-sam-cli-managed-dev-pipel-PipelineExecutionRole-5y4BWCbodfPm
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::057283593447:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionRo-NUPQIgSoZFbV
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-r-artifactsbucket-3uvsjholzb7x
  # Prod
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::057283593447:role/aws-sam-cli-managed-prod-pipe-PipelineExecutionRole-yNpFv7EyK0GH
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::057283593447:role/aws-sam-cli-managed-prod--CloudFormationExecutionRo-thdiA0EeD97V
  PROD_ARTIFACTS_BUCKET: aws-sam-cli-managed-prod-pipeline--artifactsbucket-d8oltvucdptu

jobs:
  test:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "./tests/requirements.txt"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install Python Dependencies
        run: pip install -r ./tests/requirements.txt
      # Poetry's export command doesn't include the actual package, so the CI/CD doesn't actually install battle_pythons. There's not a flag to add this to the poetry export command and pre-commit is pretty difficult to alter.
      - name: Install Battle Pythons
        run: pip install .
      - name: Pytest
        run: python -m pytest tests/unit

  delete-feature:
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Delete feature branch stack
        env:
          FEATURE_BRANCH_NAME: ${{ github.event.ref }}
        run: |
          sam delete \
            --stack-name $(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]') \
            --region ${AWS_REGION} \
            --no-prompts

  build-and-deploy-feature:
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Build resources
        run: |
          sam build \
            --template template.yaml \
            --use-container
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Deploy to feature stack in the testing account
        shell: bash
        run: |
          sam deploy \
            --stack-name $(echo ${GITHUB_REF##*/} | tr -cd '[a-zA-Z0-9-]') \
            --capabilities CAPABILITY_IAM \
            --region ${AWS_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE} \
            --on-failure DELETE \
            --no-confirm-changeset

  build-and-package:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Build resources
        run: |
          sam build \
            --template template.yaml \
            --use-container
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --region ${AWS_REGION} \
            --output-template-file packaged-testing.yaml
      - uses: actions/upload-artifact@v3
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml
      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Upload artifacts to production artifact buckets
        run: |
          sam package \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --region ${AWS_REGION} \
            --output-template-file packaged-prod.yaml
      - uses: actions/upload-artifact@v3
        with:
          name: packaged-prod.yaml
          path: packaged-prod.yaml

  deploy-testing:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v3
        with:
          name: packaged-testing.yaml
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Deploy to testing account
        run: |
          sam deploy \
            --stack-name battle-python-dev \
            --template packaged-testing.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${AWS_REGION} \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE} \
            --on-failure DELETE \
            --no-confirm-changeset

  integration-test:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install Python Dependencies
        run: pip install -r ./tests/requirements.txt
      - name: Write Cloudformation Outputs to Environment Variables
        run: python scripts/get_cloudformation_outputs.py --stack-name battle-python-dev
      - name: Run Integration Tests
        run: |
          # trigger the integration tests here

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: [integration-test]
    runs-on: ubuntu-latest
    # Configure GitHub Action Environment to have a manual approval step before deployment to production
    # https://docs.github.com/en/actions/reference/environments
    # environment: <configured-environment>
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v3
        with:
          name: packaged-prod.yaml
      - name: Assume the prod pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: prod-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true
      - name: Deploy to production account
        run: |
          sam deploy \
            --stack-name prod-battle-python \
            --template packaged-prod.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${AWS_REGION} \
            --s3-bucket ${PROD_ARTIFACTS_BUCKET} \
            --no-fail-on-empty-changeset \
            --role-arn ${PROD_CLOUDFORMATION_EXECUTION_ROLE} \
            --on-failure ROLLBACK \
            --no-confirm-changeset
